plugins {
    id 'io.spring.dependency-management'
    id 'org.springframework.boot'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

def queryDslOutput = file("src-gen/main/java")

sourceSets {
    main {
        java {
            srcDir queryDslOutput
        }
    }
}

clean {
    delete queryDslOutput
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
    doFirst {
        if (!queryDslOutput.exists()) {
            logger.info("Creating `$queryDslOutput` directory")

            if (!queryDslOutput.mkdirs()) {
                throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
            }
        }
    }

    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor",
            "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = queryDslOutput
}

compileTestJava.dependsOn(generateQueryDSL)

dependencies {
	def querydslVersion = "4.2.1"

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	runtime('com.h2database:h2')
	compile('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	/**
	* querydsl dependency
	*/
	compile ("com.querydsl:querydsl-apt:$querydslVersion")
	compile ("com.querydsl:querydsl-jpa:$querydslVersion")
}